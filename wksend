#!/usr/bin/perl
#
# Copyright (c) 2008 Rainer Clasen
# 
# This program is free software; you can redistribute it and/or modify
# it under the terms described in the file LICENSE included in this
# distribution.
#


# convert srm to hrm
# ... merge gpx ele into hrm when available
# get summary info
# generate body


use strict;
use warnings;
use Getopt::Long;
use File::Temp qw/tempfile/;
use Workout;
use Workout::Athlete;

my $delta = 0;
my $recint = 5;
my $mailto = "medico-sport";

my $wanthelp;
my $needhelp;

if( ! GetOptions(
	"delta|d=i"	=> \$delta,
	"mailto|m=s"	=> \$mailto,
	"recint|r=i"	=> \$recint,
	"help|h!"	=> \$wanthelp,
)){
	$needhelp++;
}

if( $wanthelp ){
	print <<EOF;
$0 [opt] <srm-fname> [<gpx-fname>]
prepare workout data for mailing it to the trainer

Options:
--delta|-d=<d>      time delta
--mailto|-m=<addr>  where to send the files to
--recint|-r=<int>   sampling interval (default=5)
--help              this cruft
EOF
	exit 0;
}

my $sfname = shift;
if( ! $sfname ){
	print STDERR "missing input file\n";
	$needhelp++;
}

my $gfname = shift;

if( $needhelp ){
	print STDERR "please use $0 --help for usage info\n";
	exit 1;
}

my $ath = Workout::Athlete->new;

# read srm
my $srm = 
	Workout::filter( 'Resample', 
	Workout::filter( 'Join',
	Workout::filter( 'Timeshift', 
	Workout::file_read( $sfname ), 
	{ delta => $delta } ),
	{ recint => $recint } ),
	{ recint => $recint } );

# read gpx
my $gpx = Workout::filter( 'Join',
	$gfname 
	? Workout::file_read( $gfname )
	: Workout::Store::Null->new );


# fill hrm
my $merge = Workout::filter( 'Merge', $gpx, {
	master	=> $srm,
	fields	=> [qw( ele )],
});
my $info = Workout::filter( 'Info', $merge );

my $dst = Workout::file_new( { 
	ftype	=> "hrm",
	recint	=> $recint, 
	athlete	=> $ath,
} );
$dst->from( $info );

# write hrm
my $sdate = DateTime->from_epoch( 
	epoch		=> $info->time_start,
	time_zone	=> 'local',
);

my( $hfh, $hfname ) = tempfile( 
	$sdate->strftime('/tmp/%F_%H%M_XXXXX'), SUFFIX => '.hrm' );
$dst->write( $hfh );
close( $hfh );

# generate message template
my( $bfh, $bfname ) = tempfile;
print $bfh 
"Hallo erstmal!

anbei eine weitere Aufzeichnung.

Start:        ", $sdate->strftime( '%F %H:%M:%S' ), "
Dauer:        ", &fmtdur( $info->dur ), " h:m:s
Fahrzeit:     ", &fmtdur( $info->dur_mov ), " h:m:s
Strecke:      ", sprintf( '%1.1f', ($info->dist || 0) / 1000), " km
Puls Avg:     ", (int($info->hr_avg||0)||'?'), " 1/s
Leistung Avg: ", (int($info->pwr_avg||0)||'?'), " Watt
Bergauf:      ", (int($info->incline||0)||'?'), " m

Rainer

";
close($bfh);

# open mailer
my @arg = (
	'mutt', 
	'-e', 'set sig_dashes',
	'-e', 'send-hook . "set signature=~/template/mail.signature"',
	'-s', $sdate->strftime('Training %F %H:%M'),
	'-i', $bfname,
	'-a', $hfname,
	'-a', $sfname,
	$mailto,
);
push @arg, '-a', $gfname if $gfname;

system( @arg );
#mutt -s "Training $timstr" -i $body -a $srm -a $hrm -a $gpx $mailto

sub fmtdur {
	my $s = shift;
	my $m = int($s / 60); $s %= 60;
	my $h = int($m / 60); $m %= 60;
	sprintf('%d:%02d:%02d', $h, $m, $s);
}

